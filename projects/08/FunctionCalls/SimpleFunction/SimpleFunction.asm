// bootstrap code
@256
D=A
M=M+1
M=M-1
@SP
M=D
M=M
// call command:
@SimpleFunction&Sys.init0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
// label command:
(SimpleFunction&Sys.init0)
// function command:
(SimpleFunction.test)
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
M=M
// push local 0
@LCL
M=M-1
M=M+1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M-1
M=M+1
M=M+1
M=M
// push local 1
@LCL
M=M-1
M=M+1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M-1
M=M+1
M=M+1
M=M
// add
@SP
AM=M-1
D=M
A=A-1
M=M+D
M=M
// not
@SP
AM=M-1
M=!M
@SP
M=M+1
M=M
// push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
M=M
// add
@SP
AM=M-1
D=M
A=A-1
M=M+D
M=M
// push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
M=M
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
M=M
// return command:
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
M=M
